<?php

function gdpr_form($form, &$form_state) {

    $form['tokens'] = array(
      '#theme' => 'token_tree',
      '#token_types' => array('user'),
      '#global_types' => FALSE,
      '#click_insert' => FALSE,
    );


    $form['login_popup_title'] = array(
      '#type' => 'textfield',
      '#title' => t('Title'),
      '#required' => TRUE,
      '#default_value' => variable_get('login_popup_title', ''),
    );

    $form['login_popup_timestamp'] = array(
      '#type' => 'date_popup',
      '#date_format'   => 'Y-m-d H:i',
      '#title' => t('Date, example ("2018-12-05 10:30). if the date is in the future & not empty, then the popup will show up'),
      '#description' => t('A timestamp where the popup messege should start from'),
      '#default_value' => variable_get('login_popup_timestamp', ''),
      '#maxlength' => 10
     );

    $form['login_popup_text'] = array(
      '#type' => 'textarea',
      '#title' => t('Message'),
      '#rows' => 5,
      '#required' => TRUE,
      '#element_validate' => array('token_element_validate'),
      '#default_value' => variable_get('login_popup_text', ''),
    );

    return system_settings_form($form);
}

function gdpr_menu() {
    $items = array();

    $items['admin/config/gdpr'] = array(
      'title' => 'After login popup',
      'description' => 'Configuration for Current posts module',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('gdpr_form'),
      'access arguments' => array('access administration pages'),
      'type' => MENU_NORMAL_ITEM,
    );

    return $items;
}

function gdpr_init() {
    global $user;
    $path = drupal_get_path('module', 'gdpr');
    drupal_add_css($path . '/gdpr.css');

    drupal_add_js(
        array(
      'gdpr' => array(
        'login_title' => variable_get('login_popup_title', ''),
        'login_text' => token_replace(variable_get('login_popup_text', ''), array('user' => $user)),
      )
        ), 'setting'
    );
}

function gdpr_preprocess_html(&$vars) {

    if (isset($_COOKIE["user"])) {
        $path = drupal_get_path('module', 'gdpr');
        drupal_add_js(
            $path . '/gdpr.js');
    }

    setcookie("user", "userlogin", time() - 1);
}

/**
 * Implements hook_user_login().
 */
function gdpr_user_login(&$edit, $account) {
    global $user;

    if ($user->uid == 1) {
        return;
    }

    $uid = $user->uid;

    // return if no action is required.
    $check = gdpr_check($uid);
    if (empty($check)) {
        setcookie("user", "userlogin", time() - 1);
    }
    else {
        setcookie("user", "userlogin");
    }
}

function gdpr_user_has_role() {
    global $user;
    $rid = array_search('redaktÃ¸r', $user->roles);
    if (user_has_role($rid)) {
        return TRUE;
    }
}
/* * *
 * Helper functions.
 */

function gdpr_check($uid) {
    $account = user_load($uid);
    $access = date('Y-m-d H:i', $account->access);
    $customdate = variable_get('login_popup_timestamp', '');
    $minus = date('Y-m-d H:i', strtotime("-6 month", $account->access));
    if (empty($customdate) || gdpr_user_has_role()) {
        return;
    }
    if ($access < $customdate || $access < $minus) {
        return 1;
    }
    return;
}
